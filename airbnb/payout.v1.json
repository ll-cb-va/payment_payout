{
  "swagger": "2.0",
  "info": {
    "title": "payout",
    "version": "1.0"
  },
  "host": "global-api-sandbox.lianlianpay-inc.com",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/members/{memberId}/payouts": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/payout"
            }
          },
          "400": {
            "description": "Possible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 | parameter error |\n| 999997| externalchannel error |\n| 999996 | unknown_Error |\n|L80001|duplicate payoutId|\n|L80002|Insufficient balance|",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "": {
            "schema": {
              "$ref": "#/definitions/payout"
            }
          }
        },
        "summary": "Create Payout",
        "description": "Payout from sub account to beneficiary bank account. Payout amount should no larger than the sub account balance.\n\nReturn type is `Payout` object.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "create-payout",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "payoutId": {
                  "type": "string",
                  "description": "Payout ID generated in Platform System",
                  "maxLength": 64
                },
                "bankAccountNumber": {
                  "type": "string",
                  "description": "Beneficiary bank account number",
                  "maxLength": 50
                },
                "amount": {
                  "type": "string",
                  "description": "Cash out amount",
                  "maxLength": 20
                },
                "remark": {
                  "type": "string",
                  "description": "Remark",
                  "maxLength": 300
                }
              },
              "required": [
                "payoutId",
                "bankAccountNumber",
                "amount"
              ]
            },
            "description": ""
          }
        ],
        "tags": [
          "Operations"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        }
      ]
    },
    "/members/{memberId}/payouts/{payoutId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/payout"
            }
          },
          "400": {
            "description": "Possible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 | parameter error |\n| 999997| externalchannel error |\n| 999996 | unknown_Error |",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/payout"
            }
          },
          "": {
            "schema": {
              "$ref": "#/definitions/payout"
            }
          }
        },
        "summary": "Get Payout Detail",
        "description": "Get a payout request details by payoutId.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-payout",
        "tags": [
          "Operations"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        },
        {
          "type": "string",
          "name": "payoutId",
          "in": "path",
          "required": true,
          "description": "Payout ID"
        }
      ]
    }
  },
  "definitions": {
    "payout": {
      "type": "object",
      "title": "Payout",
      "description": "Data set defiend in Lianlian Pay bank partner's system to describe a pay from sub account to a beneficiary bank account.",
      "x-tags": [
        "Models"
      ],
      "properties": {
        "payoutId": {
          "type": "string",
          "description": "Payout ID generated in Platform System",
          "maxLength": 64
        },
        "memberId": {
          "type": "string",
          "description": "Memeber id",
          "maxLength": 32
        },
        "bankAccountNumber": {
          "type": "string",
          "description": "Beneficiary bank account number",
          "maxLength": 50
        },
        "bankName": {
          "type": "string",
          "maxLength": 52,
          "description": "Bank name"
        },
        "amount": {
          "type": "string",
          "description": "Cash out amount",
          "maxLength": 20
        },
        "payoutDate": {
          "type": "string",
          "description": "Transaction date",
          "maxLength": 8
        },
        "payoutTime": {
          "type": "string",
          "description": "Transaction time",
          "maxLength": 20
        },
        "remark": {
          "type": "string",
          "description": "Remark",
          "maxLength": 120
        },
        "status": {
          "type": "string",
          "description": "Request status, one of:\n\n| Code | Description |\n|------|-------------|\n| 0 | Success |\n| 1 | Failed |\n| 2 | In progress |",
          "enum": [
            "0",
            "1",
            "2"
          ],
          "maxLength": 2
        },
        "failMsg": {
          "type": "string",
          "description": "Error message if appicable ",
          "maxLength": 300
        }
      },
      "required": [
        "payoutId",
        "memberId",
        "bankAccountNumber",
        "bankName",
        "amount",
        "payoutDate",
        "payoutTime",
        "remark",
        "status",
        "failMsg"
      ]
    }
  }
}