{
  "swagger": "2.0",
  "info": {
    "title": "member sub-account",
    "version": "1.0"
  },
  "host": "global-api-sandbox.lianlianpay-inc.com",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/members": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/member"
            }
          },
          "400": {
            "description": "Possible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 | parameter error |\n| 999996 | Unknown_Error |\n| L10001 | memberId already exist |\n",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "summary": "Create Member Sub-Account",
        "description": "Create a sub account for each host to receive payment in Lianlian Pay bank partner's system.\n\nReturn type is `Member Sub-Account` object.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "create-member",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "memberId": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Member ID from platform"
                },
                "userNickName": {
                  "type": "string",
                  "description": "Member nick name",
                  "maxLength": 120
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number",
                  "maxLength": 12
                },
                "email": {
                  "type": "string",
                  "description": "Email address",
                  "maxLength": 120
                },
                "remark": {
                  "type": "string",
                  "description": "Remark",
                  "maxLength": 120
                }
              },
              "required": [
                "memberId",
                "userNickName"
              ]
            },
            "description": ""
          }
        ],
        "tags": [
          "Operations"
        ]
      },
      "parameters": []
    },
    "/members/{memberId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/member"
            }
          },
          "400": {
            "description": "Possible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 | parameter error |\n| 999996 | Unknown_Error |",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "": {
            "schema": {
              "$ref": "#/definitions/member"
            }
          }
        },
        "summary": "Get Member Sub-Account",
        "description": "Get the sub account detail information of a host in Lianlian Pay bank partner's system by its ID.\n\nReturn type is `Member Sub-Account` object",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-member",
        "tags": [
          "Operations"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "Possible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 | parameter error |\n| 999996 | Unknown_Error |\n| L20001 | account balance should be 0 |",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "summary": "Delete Memeber Sub-Account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Delete the sub account of the host in Lianlian Pay partner's bank system.",
        "operationId": "delete-member",
        "tags": [
          "Operations"
        ]
      }
    },
    "/members/{memberId}/bankaccounts": {
      "parameters": [
        {
          "type": "string",
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        }
      ],
      "post": {
        "summary": "Add Bank Account",
        "operationId": "post-members-tranWebMemberId-bankaccounts",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/bank-account"
            }
          },
          "400": {
            "description": "Possible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 | parameter error |\n| 999997| externalchannel error |\n| 999996 | Unknown_Error |\n| L30001 | can not bind the RMA account |\n| L30002 | memberName different with previous binding |\n| L30003 | this bank account already exist |\n| L30004 | unionPay verification can not support for this bank |\n| L30005 | bank account verification failed |\n| L30006 | Invaild bankCnapsCode |",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Add a beneficiary bank account for payout and bind to the sub account in Lianlian Pay bank partner's system for a host.\n\nReturn type is `Bank-Account`object\n\nIf the verifyStatus = 0, the bank account need to be verified in following two methods \n\n| Verification Type | Description|Capability|\n|------|-------------|--------|\n| UnionPay verification | Send SMS text to account holder's mobile | Only available for individual bank account with limited bank. Please refer to the Bank List 1 in Appendix that supported UnionPay verification|\n| Small amount verification | Deposit random small amount to bank account | All type of bank account |",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "verifyType": {
                  "type": "string",
                  "enum": [
                    "1",
                    "2"
                  ],
                  "maxLength": 2,
                  "description": "Verification type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | UnionPay verification |\n| 2 | Small amount verification |"
                },
                "memberIdType": {
                  "type": "string",
                  "enum": [
                    "1",
                    "4",
                    "52",
                    "73"
                  ],
                  "maxLength": 5,
                  "description": "ID type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | National ID |\n| 52 | Business Registration Certificate |\n| 73 | Unified social credit code |"
                },
                "memberName": {
                  "type": "string",
                  "maxLength": 120,
                  "description": "Member name"
                },
                "memberIdNumber": {
                  "type": "string",
                  "maxLength": 20,
                  "description": "Member ID number"
                },
                "bankAccountNumber": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Bank account number"
                },
                "bankName": {
                  "type": "string",
                  "maxLength": 120,
                  "description": "Bank name"
                },
                "bankCnapsCode": {
                  "type": "string",
                  "maxLength": 14,
                  "description": "Bank code defined in China National Advanced Payment System"
                },
                "mobile": {
                  "type": "string",
                  "maxLength": 12,
                  "description": "Mobile number registered in bank"
                }
              },
              "required": [
                "verifyType",
                "memberIdType",
                "memberName",
                "memberIdNumber",
                "bankAccountNumber",
                "bankName",
                "mobile"
              ]
            }
          }
        ],
        "tags": [
          "Operations"
        ]
      }
    },
    "/members/{memberId}/bankaccounts/{bankAccountNumber}": {
      "parameters": [
        {
          "type": "string",
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        },
        {
          "type": "string",
          "name": "bankAccountNumber",
          "in": "path",
          "required": true,
          "description": "Bank account number or card number"
        }
      ],
      "put": {
        "summary": "Re-trigger Verification",
        "operationId": "Retrigger-verification",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/bank-account"
            }
          },
          "400": {
            "description": "Possible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 | parameter error |\n| 999997| externalchannel error |\n| 999996 | Unknown_Error |\n|L50001|this bank account already binded|\n|L50002|frequent binding requests|\n|L50003|this bank acount is wait to be verified|",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "": {
            "schema": {
              "$ref": "#/definitions/bank-account"
            }
          }
        },
        "description": "Request to re-trigger the bank account verification if the previous verification has failed or expired.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "verifyType": {
                  "type": "string",
                  "description": "Verification type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | UnionPay verification |\n| 2 | Small amount verification |",
                  "maxLength": 2
                }
              },
              "required": [
                "verifyType"
              ]
            },
            "description": ""
          }
        ],
        "tags": [
          "Operations"
        ]
      },
      "delete": {
        "summary": "Remove Bank Account",
        "operationId": "delete-members-memberId-bankaccounts-bankAccountNumber",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Possible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 | parameter error |\n| 999996 | unknown_Error |",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Delete bank account",
        "tags": [
          "Operations"
        ]
      },
      "patch": {
        "summary": "Verify Bank Account",
        "operationId": "verify-bank-account",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/bank-account"
            }
          },
          "400": {
            "description": "Possible error codes:\n\n| Code | Description |\n|------|-------------|\n| 999995 | parameter error |\n| 999997| externalchannel error |\n| 999996 | Unknown_Error |\n|L40001|verification failed|\n|L40002|verification overtime, please re-trigger verification|\n|L40003|verification error over 6 times, please try again next day|",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Request to verify a host's beneficiary bank account in Lianlian Pay bank partner's system.\n\nTwo types of verification refer to different verification informations\n\n| Verification Type | Verification Information |\n|------|-------------|\n| UnionPay verification | SMS text |\n| Small amount verification | Random amount deposited in to beneficiary account |",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "verifyType": {
                  "type": "string",
                  "enum": [
                    "1",
                    "2"
                  ],
                  "maxLength": 2,
                  "description": "Verification type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | UnionPay verification |\n| 2 | Small amount verification |"
                },
                "verifyInfo": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "Input SMS code if verifyType=1\nInput amount of receiving fund if verifyType=2"
                }
              },
              "required": [
                "verifyType",
                "verifyInfo"
              ]
            }
          }
        ],
        "tags": [
          "Operations"
        ]
      }
    }
  },
  "definitions": {
    "member": {
      "type": "object",
      "title": "Member Sub-Account",
      "description": "Member account of a single platform host defined in Lianlian Pay bank partner's system.",
      "x-tags": [
        "Models"
      ],
      "properties": {
        "memberId": {
          "type": "string",
          "description": "Member ID from platform",
          "maxLength": 32
        },
        "userNickName": {
          "type": "string",
          "description": "Member nick name",
          "maxLength": 120
        },
        "memberIdType": {
          "type": "string",
          "enum": [
            "1",
            "4",
            "52",
            "73"
          ],
          "maxLength": 5,
          "description": "ID type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | National ID |\n| 52 | Business Registration Certificate |\n| 73 | Unified social credit code |"
        },
        "memberName": {
          "type": "string",
          "maxLength": 120,
          "description": "Member name"
        },
        "memberIdNumber": {
          "type": "string",
          "maxLength": 20,
          "description": "Member ID number"
        },
        "mobile": {
          "type": "string",
          "description": "Mobile number",
          "maxLength": 12
        },
        "email": {
          "type": "string",
          "description": "Email address",
          "maxLength": 120
        },
        "totalBalance": {
          "type": "string",
          "description": "Total account balance",
          "maxLength": 20
        },
        "availableBalance": {
          "type": "string",
          "description": "Account balances that can payout, less than or equal to `totalBalance`",
          "maxLength": 20
        },
        "lastModifyDate": {
          "type": "string",
          "description": "Last modify date",
          "maxLength": 8
        },
        "remark": {
          "type": "string",
          "description": "Remark",
          "maxLength": 120
        },
        "bankAccounts": {
          "type": "array",
          "description": "Beneficiary bank accounts",
          "items": {
            "$ref": "#/definitions/bank-account"
          }
        }
      },
      "required": [
        "memberId",
        "userNickName",
        "email",
        "totalBalance",
        "availableBalance",
        "lastModifyDate"
      ]
    },
    "bank-account": {
      "title": "Bank-Account",
      "type": "object",
      "description": "Beneficiary bank account object defined in Lianlian Pay bank partner's system.\n\nThe verifyStatus is used to distinguish whether the bank account has been verified. ",
      "x-tags": [
        "Models"
      ],
      "properties": {
        "verifyStatus": {
          "type": "string",
          "enum": [
            "0",
            "1"
          ],
          "maxLength": 2,
          "description": "Whether the bank account has been verified\n\n| Code | Description |\n|------|-------------|\n| 0 | Wait to be verified |\n| 1 | Verified |"
        },
        "verifyType": {
          "type": "string",
          "enum": [
            "1",
            "2"
          ],
          "description": "Verification type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | UnionPay verification |\n| 2 | Small amount verification |"
        },
        "memberIdType": {
          "type": "string",
          "description": "ID type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | National ID |\n| 52 | Business Registration Certificate |\n| 73 | Unified social credit code |",
          "enum": [
            "1",
            "4",
            "52",
            "73"
          ],
          "maxLength": 5
        },
        "memberIdNumber": {
          "type": "string",
          "description": "Member ID number",
          "maxLength": 20
        },
        "memberName": {
          "type": "string",
          "description": "Member name",
          "maxLength": 120
        },
        "bankAccountNumber": {
          "type": "string",
          "description": "Bank account number or card number",
          "maxLength": 32
        },
        "bankCnapsCode": {
          "type": "string",
          "description": "Bank code defined in China National Advanced Payment System",
          "maxLength": 14
        },
        "mobile": {
          "type": "string",
          "description": "Mobile number registered in bank",
          "maxLength": 12
        }
      },
      "required": [
        "verifyStatus",
        "verifyType",
        "memberIdType",
        "memberIdNumber",
        "memberName",
        "bankAccountNumber",
        "mobile"
      ]
    }
  }
}