{
  "swagger": "2.0",
  "info": {
    "title": "Local Payout API",
    "version": "1.0",
    "description": ""
  },
  "host": "example.com",
  "paths": {
    "/webhooks": {
      "post": {
        "responses": {
          "200": {
            "description": "Webhooks",
            "schema": {
              "$ref": "#/definitions/webhook"
            }
          }
        },
        "summary": "Register Webhook",
        "description": "Register a webhook in Lianlian Pay's system. Registered webhook will be used to send events generated by Lianlian Pay bank partner's system.\n\nReturn type is `Webhook` object",
        "tags": [
          "Webhook"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "register-webhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "url",
                "topics"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "topics": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/webhook"
              }
            }
          }
        },
        "summary": "Get Webhook Registration List",
        "description": "Get a list of webhook registrations of a client. If no registrations, empty list will be returned.\n\nReturn type is List<`Webhook`>",
        "tags": [
          "Webhook"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-webhook-registration-list"
      }
    },
    "/webhooks/{webhookId}": {
      "get": {
        "responses": {
          "200": {
            "description": "Webhooks",
            "schema": {
              "$ref": "#/definitions/webhook"
            }
          }
        },
        "summary": "Get Webhook Registration",
        "description": "Get a webhook registration details by `webhookId`.\n\nReturn type is `Webhook` object",
        "tags": [
          "Webhook"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-webhook-registration"
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/webhook"
            }
          }
        },
        "summary": "Edit Webhook Registration",
        "description": "Edit a webhook registration by `webhookId`, such as turn on/off webhook, update webhook callback url, update registration topics.\n\nReturn type is `Webhook` object",
        "tags": [
          "Webhook"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "edit-webhook-registration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "isEnabled": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "topics": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "webhookId",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Webhook id in Lianlian Pay's system"
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "summary": "Delete Webhook Registration",
        "description": "Delete a webhook registration by `webhookId`",
        "tags": [
          "Webhook"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "delete-webhook-registration"
      }
    },
    "/members/{memberId}/transfer/{functionType}": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/transaction"
            }
          },
          "": {
            "schema": {
              "$ref": "#/definitions/transfer"
            },
            "description": ""
          }
        },
        "summary": "Init transfer",
        "description": "Different types of transfer can be initiated on member accounts for different scenarios.\n\nThe function type is used to distinguish whether the transfer is initiated or returned. \n\nThe transaction type is used to distinguish which scenario the transfer belongs to.\n\n| transactionType | Scenarios |\n|------|-------------|\n| 1 | Credit member account for fund in transit |\n| 2 | Debit coupon account to member account |\n| 3 | Debit member account to the platform's commission account |\n\nReturn type is `transfer` object\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "send-transfer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "transferType": {
                  "type": "string",
                  "description": "Transfer type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | Credit member account for fund in transit |\n| 2 | Credit member account for marketing fund |\n| 3 | Debit member account to the platform's commission account |",
                  "enum": [
                    "1",
                    "2",
                    "3"
                  ],
                  "maxLength": 2
                },
                "transferId": {
                  "type": "string",
                  "description": "Transfer ID",
                  "maxLength": 52
                },
                "oldTransferId": {
                  "type": "string",
                  "description": "Original transfer ID, mandatory if the functionType = return",
                  "maxLength": 52
                },
                "payChannelType": {
                  "type": "string",
                  "description": "Mandatory only if transactionType = 1 & functionType = initiate\n\nAcquirer, one of:\n\n| Code | Description |\n|------|-------------|\n| 0001 | Wechat |\n| 0002 | Alipay |",
                  "enum": [
                    "0001",
                    "0002"
                  ],
                  "maxLength": 20
                },
                "payChannelAssignMerNo": {
                  "type": "string",
                  "description": "Mandatory only if transactionType = 1 & functionType = initiate\n\nMerchant number assigned to platform in acquirer's system",
                  "maxLength": 50
                },
                "payChannelTranSeqNo": {
                  "type": "string",
                  "description": "Mandatory only if transactionType = 1 & functionType = initiate\n\nTransaction number in acquirer's system",
                  "maxLength": 52
                },
                "amount": {
                  "type": "string",
                  "description": "Tranaction amount",
                  "maxLength": 20
                },
                "commission": {
                  "type": "string",
                  "description": "Commission fee",
                  "maxLength": 20
                },
                "remark": {
                  "type": "string",
                  "description": "Remark",
                  "maxLength": 300
                }
              },
              "required": [
                "transferType",
                "transferId",
                "amount"
              ]
            },
            "description": ""
          }
        ],
        "tags": [
          "Transactons"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "functionType",
          "in": "path",
          "required": true,
          "description": "function type, one of:\n\n| Code | Description |\n|------|-------------|\n| initiate | Initiate a transaction |\n| return | Return a transaction |"
        },
        {
          "type": "string",
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        }
      ]
    },
    "/topup/{functionType}": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/topup"
            }
          }
        },
        "summary": "Top-up",
        "description": "top-up a specific account\n\nThe function type is used to distinguish whether the transaction is initiated or returned. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "top-up",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "topUpType": {
                  "type": "string",
                  "enum": [
                    "1"
                  ],
                  "maxLength": 2,
                  "description": "transaction type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | Top-up for coupon account |"
                },
                "memberId": {
                  "type": "string",
                  "description": "Member ID from platform",
                  "maxLength": 32
                },
                "topUpId": {
                  "type": "string",
                  "maxLength": 52,
                  "description": "Transaction ID generated in platform's system"
                },
                "oldTopUpId": {
                  "type": "string",
                  "maxLength": 52,
                  "description": "Original transaction ID, mandatory if funactionType = return"
                },
                "amount": {
                  "type": "string",
                  "maxLength": 20,
                  "description": "Top-up amount"
                },
                "remark": {
                  "type": "string",
                  "description": "Remark"
                }
              },
              "required": [
                "topUpType",
                "topUpId",
                "amount"
              ]
            },
            "description": ""
          }
        ],
        "tags": [
          "Top-up"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "functionType",
          "in": "path",
          "required": true,
          "description": "function type, one of:\n\n| Code | Description |\n|------|-------------|\n| initiate | Initiate a top-up |\n| return | Return a top-up |"
        }
      ]
    },
    "/members/{memberId}/transfer/{functionType}/{transactionId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/transaction"
            }
          },
          "": {
            "schema": {
              "$ref": "#/definitions/transfer"
            }
          }
        },
        "description": "Get a transaction request details by id.\n\nReturn type is `transfer`object",
        "summary": "Get Transfer detail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-transfer-detail",
        "tags": [
          "Transactons"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        },
        {
          "type": "string",
          "name": "transactionId",
          "in": "path",
          "required": true,
          "description": "Transaction ID"
        },
        {
          "type": "string",
          "name": "functionType",
          "in": "path",
          "required": true,
          "description": "function type, one of:\n\n| Code | Description |\n|------|-------------|\n| initiate | Initiate a transaction |\n| return | Return a transaction |"
        }
      ]
    },
    "/topups/{functionType}/{topUpId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/topup"
            }
          }
        },
        "description": "Get a top-up transaction request details by transactionId.",
        "summary": "Get top-up detail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-top-up",
        "tags": [
          "Top-up"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "functionType",
          "in": "path",
          "required": true,
          "description": "function type, one of:\n\n| Code | Description |\n|------|-------------|\n| initial | Initial a transaction |\n| return | Return a transaction |"
        },
        {
          "type": "string",
          "name": "topUpId",
          "in": "path",
          "required": true,
          "description": "Top-up ID"
        }
      ]
    },
    "/members": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/member"
            }
          }
        },
        "summary": "Create Member sub-account",
        "description": "Create a sub account for each host to receive payment in Lianlian Pay bank partner's system.\n\nReturn type is `Member sub-account` ojbect.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "create-member",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "memberId": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Member ID from platform"
                },
                "userNickName": {
                  "type": "string",
                  "description": "Member nick name",
                  "maxLength": 150
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number",
                  "maxLength": 30
                },
                "email": {
                  "type": "string",
                  "description": "Email address",
                  "maxLength": 150
                },
                "remark": {
                  "type": "string",
                  "description": "Remark",
                  "maxLength": 300
                }
              },
              "required": [
                "memberId",
                "userNickName"
              ]
            },
            "description": ""
          }
        ],
        "tags": [
          "Member sub-account"
        ]
      },
      "parameters": []
    },
    "/members/{memberId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/member"
            }
          },
          "": {
            "schema": {
              "$ref": "#/definitions/member"
            }
          }
        },
        "summary": "Get Member sub-account",
        "description": "Get the sub account detail information of a host in Lianlian Pay bank partner's system by its ID.\n\nReturn type is `Member sub-account` object",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-member",
        "tags": [
          "Member sub-account"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "memberId",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "summary": "Delete Memeber sub-account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Delete the sub account of the host in Lianlian Pay partner's bank system.",
        "operationId": "delete-member",
        "tags": [
          "Member sub-account"
        ]
      }
    },
    "/members/{memberId}/payouts": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/payout"
            }
          },
          "": {
            "schema": {
              "$ref": "#/definitions/payout"
            }
          }
        },
        "summary": "Create Payout",
        "description": "Payout from sub account to beneficiary bank account. Payout amount should no larger than the sub account balance.\n\nReturn type is `Payout` object.\n",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Payout"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "create-payout",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "payoutId": {
                  "type": "string",
                  "description": "Payout ID generated in Platform System",
                  "maxLength": 52
                },
                "bankAccountNumber": {
                  "type": "string",
                  "description": "Beneficiary bank account number",
                  "maxLength": 50
                },
                "amount": {
                  "type": "string",
                  "description": "Cash out amount",
                  "maxLength": 20
                },
                "payoutDate": {
                  "type": "string",
                  "description": "Transaction date",
                  "maxLength": 8
                },
                "payoutTime": {
                  "type": "string",
                  "description": "Transaction time",
                  "maxLength": 20
                },
                "remark": {
                  "type": "string",
                  "description": "Remark",
                  "maxLength": 300
                }
              },
              "required": [
                "payoutId",
                "bankAccountNumber",
                "amount",
                "payoutDate",
                "payoutTime"
              ]
            },
            "description": ""
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        }
      ]
    },
    "/members/{memberId}/payouts/{payoutId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/payout"
            }
          },
          "": {
            "schema": {
              "$ref": "#/definitions/payout"
            }
          }
        },
        "summary": "Get Payout",
        "description": "Get a payout request details by payoutId.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Payout"
        ],
        "operationId": "get-payout"
      },
      "parameters": [
        {
          "type": "string",
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        },
        {
          "type": "string",
          "name": "payoutId",
          "in": "path",
          "required": true,
          "description": "Payout ID"
        }
      ]
    },
    "/document/{name}/detail": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/document"
            }
          },
          "": {
            "schema": {
              "$ref": "#/definitions/document"
            }
          }
        },
        "summary": "Get Document Id",
        "description": "Get document detail by `name`\n\nReturn type is `Document` object",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "get-document",
        "tags": [
          "Document"
        ]
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Report name"
        }
      ]
    },
    "/documents/{documentId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string",
              "format": "byte",
              "description": "Document data streaming"
            }
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        },
        "summary": "Download Document",
        "description": "Download document file by `dcoumentId`. \n",
        "operationId": "download-document",
        "tags": [
          "Document"
        ]
      },
      "parameters": [
        {
          "name": "documentId",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Document id"
        }
      ]
    },
    "/events": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/event"
              }
            }
          }
        },
        "summary": "Get Event List",
        "description": "Get a list of Lianlian Pay bank partner's system generated events. If no events, empty list will be returned\n\nReturn type is List<`Event`>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Event"
        ],
        "operationId": "get-event-list"
      }
    },
    "/events/{eventId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/event"
            }
          }
        },
        "summary": "Get Event",
        "description": "Get a Lianlian Pay bank partner's system generated event by `eventId`\n\nReturn type is `Event` object",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Event"
        ],
        "operationId": "get-event"
      },
      "parameters": [
        {
          "name": "eventId",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Event id in Lianlian Pay's system"
        }
      ]
    },
    "/members/{memberId}/bankaccounts": {
      "parameters": [
        {
          "type": "string",
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        }
      ],
      "post": {
        "summary": "Add Bank Account",
        "operationId": "post-members-tranWebMemberId-bankaccounts",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/bank-account"
            }
          }
        },
        "description": "Add a beneficiary bank account for payout and bind to the sub account in Lianlian Pay bank partner's system for a host.\n\nReturn type is `bank-account`object\n\nIf the verifyStatus = 0, the bank account need to be verified in following two methods \n\n| Verification Type | Description|Capability|\n|------|-------------|--------|\n| UnionPay verification | Send SMS text to account holder's mobile | Only available for individual bank account|\n| Small amount verification | Deposit random small amount to bank account | All type of bank account |",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "verifyType": {
                  "type": "string",
                  "enum": [
                    "1",
                    "2"
                  ],
                  "maxLength": 2,
                  "description": "Verification type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | UnionPay verification |\n| 2 | Small amount verification |"
                },
                "memberIdType": {
                  "type": "string",
                  "enum": [
                    "1",
                    "4",
                    "52",
                    "73"
                  ],
                  "maxLength": 5,
                  "description": "ID type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | National ID |\n| 4 | Chinese Passport|\n| 52 | Business Registration Certificate |\n| 73 | Unified social credit code |"
                },
                "memberName": {
                  "type": "string",
                  "maxLength": 150,
                  "description": "Member name"
                },
                "memberIdNumber": {
                  "type": "string",
                  "maxLength": 32,
                  "description": "Member ID number"
                },
                "bankAccountNumber": {
                  "type": "string",
                  "maxLength": 50,
                  "description": "Bank account number"
                },
                "bankName": {
                  "type": "string",
                  "maxLength": 80,
                  "description": "Bank name"
                },
                "bankCnapsCode": {
                  "type": "string",
                  "maxLength": 30,
                  "description": "Bank code defined in China National Advanced Payment System"
                },
                "mobile": {
                  "type": "string",
                  "maxLength": 30,
                  "description": "Mobile number registered in bank"
                }
              },
              "required": [
                "verifyType",
                "memberIdType",
                "memberName",
                "memberIdNumber",
                "bankAccountNumber",
                "bankName",
                "mobile"
              ]
            }
          }
        ],
        "tags": [
          "Member sub-account"
        ]
      }
    },
    "/members/{memberId}/bankaccounts/{bankAccountNumber}": {
      "parameters": [
        {
          "type": "string",
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Member ID from platform"
        },
        {
          "type": "string",
          "name": "bankAccountNumber",
          "in": "path",
          "required": true,
          "description": "Bank account number or card number"
        }
      ],
      "put": {
        "summary": "Re-trigger verification",
        "operationId": "Retrigger-verification",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/bank-account"
            }
          },
          "": {
            "schema": {
              "$ref": "#/definitions/bank-account"
            }
          }
        },
        "description": "Request to re-trigger the bank account verification if the previous verification has failed or expired.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "verifyType": {
                  "type": "string",
                  "description": "Verification type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | UnionPay verification |\n| 2 | Small amount verification |",
                  "maxLength": 2
                }
              },
              "required": [
                "verifyType"
              ]
            },
            "description": ""
          }
        ],
        "tags": [
          "Member sub-account"
        ]
      },
      "delete": {
        "summary": "Remove bank account",
        "operationId": "delete-members-memberId-bankaccounts-bankAccountNumber",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/bank-account"
            }
          }
        },
        "description": "Delete bank account",
        "tags": [
          "Member sub-account"
        ]
      },
      "patch": {
        "summary": "Verify Bank Account",
        "operationId": "verify-bank-account",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/bank-account"
            }
          }
        },
        "description": "Request to verify a host's beneficiary bank account in Lianlian Pay bank partner's system.\n\nTwo types of verification refer to different verification informations\n\n| Verification Type | Verification Information |\n|------|-------------|\n| UnionPay verification | SMS text |\n| Small amount verification | Random amount deposited in to beneficiary account |",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "verifyType": {
                  "type": "string",
                  "enum": [
                    "1",
                    "2"
                  ],
                  "maxLength": 2,
                  "description": "Verification type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | UnionPay verification |\n| 2 | Small amount verification |"
                },
                "verifyInfo": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "Input SMS code if verifyType=1\nInput amount of receiving fund if verifyType=2"
                }
              },
              "required": [
                "verifyType",
                "verifyInfo"
              ]
            }
          }
        ],
        "tags": [
          "Member sub-account"
        ]
      }
    },
    "/functionaccount": {
      "get": {
        "summary": "Get function sub-account",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/functional-sub-account"
              }
            }
          }
        },
        "operationId": "get-function-account",
        "description": "Get the detail of all function sub-account\n\n|Code|Description|Usage|\n|--------|--------|----|\n|1|coupon account| fund in this account can be transfered to member account for marketing purpose |\n|2|commission account| fund belonged to platform will be deposited into this account |\n",
        "tags": [
          "function sub-account"
        ]
      }
    }
  },
  "definitions": {
    "webhook": {
      "type": "object",
      "title": "Webhook",
      "description": "Object used in Lianlian Pay's system to describe the client registration of event callbacks.\n\nLianlian Pay uses this object to identify events which should be pushed back to client's url.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Webhook registration id in Lianlian Pay's system"
        },
        "url": {
          "type": "string",
          "description": "Client callback url"
        },
        "isEnable": {
          "type": "boolean",
          "description": "Enable/disable callbacks"
        },
        "createTime": {
          "type": "string",
          "description": "Webhook registration time, UTC+0 timestamp"
        },
        "modifyTime": {
          "type": "string",
          "description": "Webhook last modified time, UTC+0 timestamp"
        },
        "topics": {
          "type": "array",
          "description": "Event topics in Lianlian Pay's system",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "url",
        "isEnable",
        "createTime",
        "topics"
      ],
      "x-tags": [
        "Models"
      ]
    },
    "event": {
      "type": "object",
      "title": "Event",
      "description": "Event object generated during business processing in Lianlian Pay's system. ",
      "properties": {
        "id": {
          "type": "string",
          "description": "Event id in Lianlian Pay's system"
        },
        "topic": {
          "type": "array",
          "description": "Event topics defined in Lianlian Pay's system.\n\n| Topic | Description |\n|------|-------------|\n| member.payout.success | Payout success. |\n| member.payout.failed | Payout failed. |\n| reconciliation.transaction.created |Transaction reconciliation documents created.|\n| reconciliation.topup.created | Topup reconciliation documents created. |\n| reconciliation.payout.created | Payout reconciliation documents created. |\n| reconciliation.balance.created | End-of-day member account balance reconciliation documents created. |",
          "items": {
            "type": "string"
          }
        },
        "createTime": {
          "type": "string",
          "description": "Event created time, UTC+0 timestamp"
        },
        "data": {
          "type": "object",
          "description": "Event details"
        }
      },
      "required": [
        "id",
        "topic",
        "createTime",
        "data"
      ],
      "x-tags": [
        "Models"
      ]
    },
    "document": {
      "type": "object",
      "title": "Document",
      "description": "Report object defined in Lianlian Pay's system. Used to download reports such as reconcilation files generated in Lianlian Pay bank partner's system.\n\n<!-- theme: info -->\n>Two ways to access daily reconcilation files:\n>\n>1. Request \"Get Report\" API with file name following below reconciliation file name format defination after 08:00 PM(GMT+8) everyday to download.\n>\n>2. Enroll Lianlian Pay Webhook and register `reconciliation.transaction.created`, `reconciliation.payout.created`, `reconciliation.balance.created`, `reconciliation.topup.created` topics to receive file ready notices, then download by requesting \"Get Report\" API.\n> \n\nApplicable reconciliation file types:\n\n| Name Format | Description |\n|-----------|-------------|\n| TRANSACTION_YYYYMMDD.gz | Transaction request reconcilation file\n| PAYOUT_YYYYMMDD.gz | Payout request reconcilation file\n| BALANCE_YYYYMMDD.gz | Member account EOD balance file|\n| TOPUP_YYYYMMDD.gz | Top-up request reconcilation file|",
      "x-tags": [
        "Models"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Document ID"
        },
        "name": {
          "type": "string",
          "description": "Document Name"
        },
        "size": {
          "type": "number",
          "description": "Document file size"
        },
        "createTime": {
          "type": "string",
          "description": "Document create time"
        }
      },
      "required": [
        "id",
        "name",
        "size",
        "createTime"
      ]
    },
    "member": {
      "type": "object",
      "title": "Member sub-account",
      "description": "Member account of a single platform host defined in Lianlian Pay bank partner's system.",
      "x-tags": [
        "Models"
      ],
      "properties": {
        "memberId": {
          "type": "string",
          "description": "Member ID from platform",
          "maxLength": 32
        },
        "userNickName": {
          "type": "string",
          "description": "Member nick name",
          "maxLength": 150
        },
        "mobile": {
          "type": "string",
          "description": "Mobile number",
          "maxLength": 30
        },
        "email": {
          "type": "string",
          "description": "Email address",
          "maxLength": 150
        },
        "totalBalance": {
          "type": "string",
          "description": "Total account balance",
          "maxLength": 20
        },
        "availableBalance": {
          "type": "string",
          "description": "Account balances that can payout, less than or equal to `totalBalance`",
          "maxLength": 20
        },
        "lastModifyDate": {
          "type": "string",
          "description": "Last modify date",
          "maxLength": 8
        },
        "remark": {
          "type": "string",
          "description": "Remark",
          "maxLength": 300
        },
        "bankAccounts": {
          "type": "array",
          "description": "Beneficiary bank accounts",
          "items": {
            "$ref": "#/definitions/bank-account"
          }
        }
      },
      "required": [
        "memberId",
        "userNickName",
        "mobile",
        "email",
        "totalBalance",
        "availableBalance",
        "lastModifyDate",
        "remark",
        "bankAccounts"
      ]
    },
    "transfer": {
      "type": "object",
      "title": "Transfer",
      "description": "Data set defined in Lianlian Pay bank partner's system to describe a transaction related to host's member account",
      "x-tags": [
        "Models"
      ],
      "properties": {
        "functionType": {
          "type": "string",
          "description": "function type, one of: \n\n| Code | Description |\n|------|-------------|\n| initiate | Initiate a transaction |\n| return | Return a transaction |",
          "maxLength": 2,
          "enum": [
            "initial",
            "cancel"
          ]
        },
        "transferType": {
          "type": "string",
          "description": "Transfer type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | Credit member account for fund in transit |\n| 2 | Credit member account for marketing fund |\n| 3 | Debit member account to the platform's commission account |",
          "maxLength": 1,
          "enum": [
            "1",
            "2",
            "3"
          ],
          "minLength": 1
        },
        "transferId": {
          "type": "string",
          "maxLength": 52,
          "description": "Transfer ID"
        },
        "oldTransferId": {
          "type": "string",
          "description": "Original transferId, mandatory if the functionType = return",
          "maxLength": 52
        },
        "memberId": {
          "type": "string",
          "description": "Member ID from platform",
          "maxLength": 32
        },
        "amount": {
          "type": "string",
          "description": "Transaction amount",
          "maxLength": 20
        },
        "commission": {
          "type": "string",
          "description": "Commission fee",
          "maxLength": 20
        },
        "payChannelType": {
          "type": "string",
          "description": "Mandatory only if transactionType = 1 & functionType = initiate\n\nAcquirer, one of:\n\n| Code | Description |\n|------|-------------|\n| 0001 | Wechat |\n| 0002 | Alipay |",
          "maxLength": 20,
          "enum": [
            "0001",
            "0002"
          ]
        },
        "payChannelAssignMerNo": {
          "type": "string",
          "description": "Mandatory only if transactionType = 1 & functionType = initiate\n\nMerchant number assigned to platform in acquirer's system",
          "maxLength": 50
        },
        "payChannelTranSeqNo": {
          "type": "string",
          "description": "Mandatory only if transactionType = 1 & functionType = initiate\n\nTransaction number in acquirer's system",
          "maxLength": 52
        },
        "tranDate": {
          "type": "string",
          "description": "Transfer date",
          "maxLength": 8
        },
        "tranTime": {
          "type": "string",
          "description": "Transfer time",
          "maxLength": 20
        },
        "remark": {
          "type": "string",
          "description": "Remark",
          "maxLength": 300
        },
        "status": {
          "type": "string",
          "description": "Status, one of:\n\n| Code | Description |\n|------|-------------|\n| 0 | Success |\n| 1 | Failed |\n| 2 | In progress |",
          "enum": [
            "0",
            "1",
            "2"
          ],
          "maxLength": 2
        },
        "failMsg": {
          "type": "string",
          "description": "Error message if applicable",
          "maxLength": 300
        }
      },
      "required": [
        "functionType",
        "transferType",
        "transferId",
        "oldTransferId",
        "memberId",
        "amount",
        "commission",
        "tranDate",
        "tranTime"
      ]
    },
    "payout": {
      "type": "object",
      "title": "Payout",
      "description": "Data set defiend in Lianlian Pay bank partner's system to describe a pay from sub account to a beneficiary bank account.",
      "x-tags": [
        "Models"
      ],
      "properties": {
        "payoutId": {
          "type": "string",
          "description": "Payout ID generated in Platform System",
          "maxLength": 52
        },
        "memberId": {
          "type": "string",
          "description": "Memeber id",
          "maxLength": 32
        },
        "bankAccountNumber": {
          "type": "string",
          "description": "Beneficiary bank account number",
          "maxLength": 50
        },
        "bankName": {
          "type": "string",
          "maxLength": 52,
          "description": "Bank name"
        },
        "amount": {
          "type": "string",
          "description": "Cash out amount",
          "maxLength": 20
        },
        "payoutDate": {
          "type": "string",
          "description": "Transaction date",
          "maxLength": 8
        },
        "payoutTime": {
          "type": "string",
          "description": "Transaction time",
          "maxLength": 20
        },
        "remark": {
          "type": "string",
          "description": "Remark",
          "maxLength": 300
        },
        "status": {
          "type": "string",
          "description": "Request status, one of:\n\n| Code | Description |\n|------|-------------|\n| 0 | Success |\n| 1 | Failed |\n| 2 | In progress |",
          "enum": [
            "0",
            "1",
            "2"
          ],
          "maxLength": 2
        },
        "failMsg": {
          "type": "string",
          "description": "Error message if appicable ",
          "maxLength": 300
        }
      },
      "required": [
        "payoutId",
        "memberId",
        "bankAccountNumber",
        "bankName",
        "amount",
        "payoutDate",
        "payoutTime",
        "remark",
        "status",
        "failMsg"
      ]
    },
    "topup": {
      "title": "Topup",
      "type": "object",
      "description": "Data set defined in Lianlian Pay bank partner's system to describe a top-up transaction related to specific account",
      "x-tags": [
        "Models"
      ],
      "properties": {
        "functionType": {
          "type": "string",
          "description": "function type, one of:\n\n| Code | Description |\n|------|-------------|\n| initiate | Initiate a topup |\n| return | Return a topup |",
          "enum": [
            "initial",
            "cancel"
          ],
          "maxLength": 10
        },
        "topUpType": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1,
          "enum": [
            "1"
          ],
          "description": "Top-up type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | Top-up for coupon account |"
        },
        "topUpId": {
          "type": "string",
          "maxLength": 52,
          "description": "Top-up ID"
        },
        "oldTopUpId": {
          "type": "string",
          "maxLength": 52,
          "description": "Original Top-up ID, mandatory if funactionType= return"
        },
        "amount": {
          "type": "string",
          "maxLength": 20,
          "description": "Top-up amount"
        },
        "remark": {
          "type": "string",
          "maxLength": 300,
          "description": "Remark"
        },
        "status": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2"
          ],
          "maxLength": 2,
          "description": "Transaction status, one of:\n\n| Code | Description |\n|------|-------------|\n| 0 | Success |\n| 1 | Failed |\n| 2 | In progress |"
        },
        "failMsg": {
          "type": "string",
          "maxLength": 300,
          "description": "Error message if applicable"
        }
      },
      "required": [
        "functionType",
        "topUpType",
        "topUpId",
        "oldTopUpId",
        "amount",
        "remark",
        "status"
      ]
    },
    "bank-account": {
      "title": "bank-account",
      "type": "object",
      "description": "Beneficiary bank account object defined in Lianlian Pay bank partner's system.\n\nThe verifyStatus is used to distinguish whether the bank account has been verified. ",
      "x-tags": [
        "Models"
      ],
      "properties": {
        "verifyStatus": {
          "type": "string",
          "enum": [
            "0",
            "1"
          ],
          "maxLength": 2,
          "description": "Whether the bank account has been verified\n\n| Code | Description |\n|------|-------------|\n| 0 | Wait to be verified |\n| 1 | Verified |"
        },
        "verifyType": {
          "type": "string",
          "enum": [
            "1",
            "2"
          ],
          "description": "Verification type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | UnionPay verification |\n| 2 | Small amount verification |"
        },
        "memberIdType": {
          "type": "string",
          "description": "ID type, one of:\n\n| Code | Description |\n|------|-------------|\n| 1 | National ID |\n| 4 | Chinese Passport|\n| 52 | Business Registration Certificate |\n| 73 | Unified social credit code |",
          "enum": [
            "1",
            "4",
            "52",
            "73"
          ],
          "maxLength": 5
        },
        "memberIdNumber": {
          "type": "string",
          "description": "Member ID number",
          "maxLength": 32
        },
        "memberName": {
          "type": "string",
          "description": "Member name",
          "maxLength": 150
        },
        "bankAccountNumber": {
          "type": "string",
          "description": "Bank account number or card number",
          "maxLength": 80
        },
        "bankCnapsCode": {
          "type": "string",
          "description": "Bank code defined in China National Advanced Payment System",
          "maxLength": 30
        },
        "mobile": {
          "type": "string",
          "description": "Mobile number registered in bank",
          "maxLength": 30
        }
      },
      "required": [
        "verifyStatus",
        "verifyType",
        "memberIdType",
        "memberIdNumber",
        "memberName",
        "bankAccountNumber",
        "mobile"
      ]
    },
    "functional-sub-account": {
      "title": "Functional sub-account",
      "type": "object",
      "description": "Functional sub-accounts created by default by Lianlian Pay bank partner",
      "x-tags": [
        "Models"
      ],
      "properties": {
        "accountType": {
          "type": "string",
          "enum": [
            "1",
            "2"
          ],
          "description": "Account Type, one of\n\n|Code|Description|\n|--------|--------|\n|1|coupon account|\n|2|commission account|",
          "maxLength": 2
        },
        "totalBalance": {
          "type": "string",
          "description": "Total balance",
          "maxLength": 20
        },
        "availableBalance": {
          "type": "string",
          "description": "Account balances that can payout, less than or equal to `totalBalance`",
          "maxLength": 20
        }
      },
      "required": [
        "accountType",
        "totalBalance",
        "availableBalance"
      ]
    }
  },
  "parameters": {},
  "tags": [
    {
      "name": "Member"
    },
    {
      "name": "Payment"
    },
    {
      "name": "Coupon"
    },
    {
      "name": "Payout"
    },
    {
      "name": "Report"
    },
    {
      "name": "Event"
    },
    {
      "name": "Webhook"
    },
    {
      "name": "Document"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ]
}